package controller;

import Model.EmployeeModel;
import Model.Employee.Role;
import Model.Employee.Poste;
import View.EmployeeView;

public class EmploeeController {
    private EmployeeView view;
    private EmployeeModel model;

    public EmploeeController(EmployeeView view, EmployeeModel model) {
        this.view = view;
        this.model = model;

        this.view.getAjouterButton().addActionListener(e -> addEmployee());
    }

    private void addEmployee() {
        String nom = view.getNom();
        String prenom = view.getPrenom();
        String email = view.getEmail();
        String phone = view.getPhone();
        String salaire = view.getSalaire();
        Role role = view.getSelectedRole();
        Poste poste = view.getSelectedPoste();

        // Vérification des champs obligatoires
        if (nom.isEmpty() || prenom.isEmpty() || email.isEmpty()) {
            view.afficherMessageErreur("Les champs nom, prénom et email sont obligatoires.");
            return;
        }

        // Vérification du salaire
        try {
            double salaireDouble = Double.parseDouble(salaire);
            if (salaireDouble <= 0) {
                view.afficherMessageErreur("Le salaire doit être un nombre positif.");
                return;
            }
        } catch (NumberFormatException e) {
            view.afficherMessageErreur("Le salaire doit être un nombre valide.");
            return;
        }

        // Vérification du rôle et du poste
        if (role == null || poste == null) {
            view.afficherMessageErreur("Veuillez sélectionner un rôle et un poste.");
            return;
        }

        // Ajout de l'employé via le modèle
        model.addEmployee(nom, prenom, email, phone, salaire, role, poste);

        // Message de confirmation
        view.afficherMessageSucces("Employé ajouté avec succès !");
    }
}
